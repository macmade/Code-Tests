/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header          fibonascii.h
 * @copyright       eosgarden 2010 - Jean-David Gadina <macmade@eosgarden.com>
 * @abstract        Fibonascii main header file
 * @version         0.0.1
 * @availability    0.0.1
 * @updated         $Date$
 */

#ifndef __FIBONASCII_H__
#define __FIBONASCII_H__
#pragma once

#ifdef __cplusplus
extern "C" {
#endif


/* Definition of the boolean data type if necessary */
#ifndef __bool_true_false_are_defined
    #define bool                            _Bool
    #define true                            1
    #define false                           0
    #define __bool_true_false_are_defined   1
#endif

/* Utility macros for GCC */
#if defined( __GNUC__ )
    
    /* Version checking */
    #if     defined( __GNUC_MINOR__ )       \
        &&  defined( __GNUC_PATCHLEVEL__ )  \
        && !defined( __GCC_VERSION__ )
    
    /*!
     * @define          __GCC_VERSION__
     * @abstract        GCC version number
     * @availability    N/A
     */
    #define __GCC_VERSION__ ( __GNUC__       * 10000    \
                            + __GNUC_MINOR__ * 100      \
                            + __GNUC_PATCHLEVEL__ )
    
    #endif

#endif

/* Size conversion macros */
#define BYTE_TO_KB( b ) (               b / ( long double )1000 )
#define BYTE_TO_MB( b ) ( (             b / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_GB( b ) ( ( (           b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_TB( b ) ( ( ( (         b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_PB( b ) ( ( ( ( (       b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_EB( b ) ( ( ( ( ( (     b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_ZB( b ) ( ( ( ( ( ( (   b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )
#define BYTE_TO_YB( b ) ( ( ( ( ( ( ( ( b / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 ) / ( long double )1000 )

/* Size limits macros */
#define SIZE_MAX_BYTE       1000.0f
#define SIZE_MAX_KILOBYTE   1000000.0f
#define SIZE_MAX_MEGABYTE   1000000000.0f
#define SIZE_MAX_GIGABYTE   1000000000000.0f
#define SIZE_MAX_TERABYTE   1000000000000000.0f
#define SIZE_MAX_PETABYTE   1000000000000000000.0f
#define SIZE_MAX_EXABYTE    1000000000000000000000.0f
#define SIZE_MAX_ZETTABYTE  1000000000000000000000000.0f
#define SIZE_MAX_YOTTABYTE  1000000000000000000000000000.0f

/* Stringification macros */
#define XSTR(s) STR(s)
#define  STR(s) #s

#ifdef __cplusplus
}
#endif

#endif /* __FIBONASCII_H__ */
